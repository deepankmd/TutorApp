@using TutorAppAPI.ViewModel
@model ParentDetailsViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Profile Page";
}

<h6 class="mb-3">Profile</h6>

<div class="row">
    <div class="col-md-3">
    <div class="card card-primary card-outline">
        <div class="card-body box-profile">
            <div class="text-center">
                <img class="profile-user-img img-fluid img-circle"
                     src="~/dist/img/user4-128x128.jpg"
                     alt="User profile picture">
            </div>

            <h3 class="profile-username text-center">@Model.Name</h3>

            <p class="text-muted text-center">@Model.Nationality</p>

            <ul class="list-group list-group-unbordered mb-3">
                <li class="list-group-item">
                    <b>RelationShip</b> <a class="float-right">@Model.RelationShip</a>
                </li>
                <li class="list-group-item">
                    <b>Student Name</b> <a class="float-right">@Model.StudentName</a>
                </li>
            </ul>
            <a href="@Url.Action("Edit", "ParentDetails", new { id = Model._id.ToString() })" class="btn btn-primary btn-block"><b>Update</b></a>
        </div>
        <!-- /.card-body -->
    </div>
    </div>
    <div class="col-md-8">
        <div class="card">
            <div class="card-header p-2">
                <ul class="nav nav-pills">
                    <li class="nav-item"><a class="nav-link active" href="#activity" data-toggle="tab">Posting</a></li>
                    <li class="nav-item"><a class="nav-link" href="#settings" data-toggle="tab">Settings</a></li>
                </ul>
            </div><!-- /.card-header -->
            <div class="card-body">
                <div class="tab-content">
                    <div class="active tab-pane" id="activity">
                        <div class="card card-solid">
                            <div class="card-body pb-0">
                                <div class="row">
                                    <div id="modalContainer">
                                        <div>
                                            @if (!Model.Assignment.Any())
                                            {
                                                <b>
                                                    No Assignments for this selected subjects !!!
                                                </b>
                                            }
                                            else
                                            {
                                                <div class="row">
                                                    @foreach (var assignment in Model.Assignment)
                                                    {
                                                        <div class="col-12 col-sm-6 col-md-4 d-flex align-items-stretch flex-column">
                                                            <div class="card bg-light d-flex flex-fill">
                                                                <div class="card-header text-muted border-bottom-0">
                                                                    @assignment.ID.ToString().Substring(assignment.ID.ToString().Length - 7).ToUpper()
                                                                    <span class="">
                                                                        <small class="bg-danger">Urgent</small>
                                                                    </span>
                                                                    <span class="float-right">
                                                                        <i class="fa fas fa-share"></i>
                                                                    </span>
                                                                </div>

                                                                <div class="card-body pt-0">
                                                                    <div class="row">
                                                                        <div class="col-12">
                                                                            <h2 class="lead"><b>@assignment.SubjectsToBeTutored</b></h2>
                                                                            <p class="text-muted text-sm"><b></b>@assignment.TutorAvailability @assignment.AvailableTimings</p>
                                                                            <ul class="ml-4 mb-0 fa-ul text-muted">
                                                                                <li class="small"><span class="fa-li"><i class="fas fa-lg fa-building"></i></span># @assignment.Address</li>
                                                                                <li class="small"><span class="fa-li"><i class="fas fa-lg fa-times-rectangle"></i></span>@assignment.FrequencyOfLessons</li>
                                                                            </ul>
                                                                            <p><small>$ @assignment.YourTuitionBudget</small></p>
                                                                            <p><small>@assignment.DescriptionOfNeeds</small></p>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="card-footer">
                                                                    <div class="text-right">
                                                                            <p>
                                                                                @if (assignment.IsVerified)
                                                                                {
                                                                                    <i class="fas fa-anchor"></i>
                                                                                    <small>Assignment Posted Sucessfully</small>
                                                                                <a asp-controller="Assignment" asp-action="ViewApplicants" asp-route-id="@assignment.ID.ToString()" class="btn btn-primary">
                                                                                        <i class="fas fa-list-ol"></i>
                                                                                        <span class="badge badge-danger navbar-badge">2</span>View Applications
                                                                                    </a>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <i class="fa fas fa-archive"></i>
                                                                                    <small> Verification Pending</small>
                                                                                }
                                                                            </p>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <!-- /.card-footer -->
                        </div>
                    </div>
                    <!-- /.tab-pane -->
                    
                    <div class="tab-pane" id="settings">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(model => model._id)

                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.StudentName, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.StudentName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.RelationShip, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.RelationShip, (SelectList)ViewBag.RelationShip, "Select RelationShip", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.RelationShip, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.Nationality, (SelectList)ViewBag.Nationality, "Select Nationality", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.Gender, (SelectList)ViewBag.Gender, "Select Gender", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                                @Html.TextAreaFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <input type="submit" value="Save" class="btn btn-primary" />
                            </div>
                        }
                    </div>
                    <!-- /.tab-pane -->
                </div>
                <!-- /.tab-content -->
            </div><!-- /.card-body -->
        </div>
        <!-- /.card -->
    </div>


    <!-- /.card -->

</div>

