@using TutorAppAPI.ViewModel
@model TutorRegisterViewModel

<form id="tutorPrefForm">
<div class="row">
    <div class="col-md-12">
        <div class="card card-outline card-warning">
            <div class="card-header">
                <h3 class="card-title"><b>Tutoring Preferences</b></h3>
            </div>

            <div class="card-header">
                <h6 class="card-title text-muted">Subjects You Can Teach</h6>
            </div>

            <div class="card-body">
                <p class="card-text text-muted">
                    Click the tabs to scroll through different levels & select the subjects you can teach
                </p>

                <div id="accordion">

                    @foreach (var tutorLevel in Model.TutoringPreferences.TutorLevels)
                    {
                        <div class="card card-secondary">
                            <div class="card-header">
                                <h4 class="card-title w-100">
                                    <a class="d-block w-100" data-toggle="collapse" href="#collapse@(tutorLevel.ID)">
                                        @tutorLevel.LevelName <!-- Use the level name or any other property you want to display -->
                                    </a>
                                </h4>
                            </div>
                            <div id="collapse@(tutorLevel.ID)" class="collapse" data-parent="#accordion">
                                <div class="card-body">

                                    <div class="form-group">
                                        @foreach (var subject in Model.TutoringPreferences.TutorSubject.Where(_ => _.TutorLevelID == tutorLevel.ID))
                                        {
                                            <div class="form-check form-check-inline">
                                                <input for="selectedSubjects" class="form-check-input" type="checkbox" name="selectedSubjects" value="@subject.ID.ToString()" id="subject@(subject.ID)" required>
                                                <label class="form-check-label" for="selectedSubjects">
                                                    @subject.Name
                                                </label>
                                            </div>
                                        }
                                    </div>

                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="card card-outline card-warning">
                    <div class="card-header">
                        <h3 class="card-title">Experience In Special Needs? (Leave Blank If None)</h3>
                    </div>
                    <div class="card-body">
                        <div class="form-group">

                            @foreach (var specialNeed in new[] { "Dyslexia", "Autism Spectrum Disorder (ASD)", "ADHD", "Anger Management", "Slow Learner", "Down Syndrome" })
                            {
                                <div class="form-check form-group form-check-inline">
                                    <input class="form-check-input" type="checkbox" name="specialNeeds" for="specialNeeds" value="@specialNeed" id="@specialNeed" required>
                                    <label class="form-check-label" for="specialNeeds">
                                        @specialNeed
                                    </label>
                                </div>
                            }
                        </div>
                        <div class="form-group">
                            <label for="special_needs_experience" class="mb-0 mt-2 d-inline-block">Include:</label>
                            <br />
                            <p class="small pb-1 pt-2 text-muted d-inline-block"><i class="fa fa-check"></i> No. of special needs student taught and description of their ailment(s)</p><br />
                            <p class="small pb-2 text-muted d-md-inline-block"><i class="fa fa-check"></i> What methodologies/strategies you have implemented to teach them effectively</p>
                            <textarea cols="70" id="id_special_needs_experience" maxlength="1500" name="textspecialNeedsExperienceDescription" rows="3" class="control-form mt-0"></textarea>
                        </div>
                    </div>
                </div>

                <div class="card card-outline card-warning">
                    <div class="card-header">
                        <h3 class="card-title"><b>Preferred Tutoring Location(s)</b></h3>
                        <br>
                        <small>You may select MULTIPLE locations</small>
                    </div>
                    <div class="card-body">
                        <div class="form-group">
                            @foreach (var location in Model.TutoringPreferences.Locations)
                            {
                                <div class="form-check form-group form-check-inline">
                                    <input class="form-check-input" type="checkbox" name="locations" for="locations" value="@location.Location" id="@location.Location" required>
                                    <label class="form-check-label" for="locations">
                                        @location.Location
                                    </label>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>       
    </div>
</div>
</form>